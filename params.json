{"name":"Surrealism","tagline":"surreal sentence and error message generator for Python.","body":"surrealism\r\n==========\r\n\r\nsurrealism module for Python\r\n----------------------------\r\n\r\n\r\nThis module allows you to generate surreal sentences and error messages very easily from within your python programs.  \r\n\r\n\r\nThis module is a derivative work (used with permission) from www.ravenblack.net.  \r\n\r\n\r\nCredit also goes to Kevan Davis on whose work the surrealism generator at www.ravenblack.net is based on.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nIf you have downloaded the source distribution, to install do the following at the commandline: \r\n\r\n::\r\n   \r\n   $ python setup.py install\r\n\r\n\r\nOr using easy_install:\r\n\r\n::\r\n\r\n   $ easy_install surrealism\r\n\r\n\r\nAnd it will download and install the latest version from the Python Package Index.\r\n\r\n\r\nOr pip:\r\n\r\n::\r\n\r\n   $ pip install surrealism\r\n\r\n\r\nAnd it will download and install the latest version from the Python Package Index.\r\n\r\n\r\n\r\n\r\nUsage Examples\r\n--------------\r\n\r\n**Generate a surreal sentence**:\r\n\r\n::\r\n\r\n   >>> import surrealism\r\n   >>> sentence = surrealism.getsentence()\r\n   >>> print sentence\r\n   >>> If I can get the Pot Noodle to enter Radiohead's Lead Singer, the lego-brick will dilute Julian Assange and I'll be able to spy on Neil Armstrong!\r\n\r\nYou can also specify an integer representing the relevant row ID from the database in order to return a specific sentence:\r\n\r\n::\r\n\r\n   >>> import surrealism\r\n   >>> sentence = surrealism.getsentence(39)\r\n   >>> print sentence\r\n   >>> Don't drop things on X-Wings - get blood out of deep-fat friers!\r\n\r\n   \r\n**Generate a surreal error message**:\r\n\r\n::\r\n\r\n   >>> import surrealism\r\n   >>> print surrealism.getfault()\r\n   >>> thing.c:466: fearsome error in 'blow-up doll()' - missing thing-a-ma-jig.\r\n\r\nYou can also specify an integer representing the relevant row ID from the database in order to return a specific sentence:\r\n\r\n::\r\n\r\n   >>> import surrealism\r\n   >>> print surrealism.getfault(3)\r\n   >>> Traceback (most recent call last):  File '/party popper/fighter plane/glistening_seashell/anti-depressant.py', line 20, in straggly_particle accelerator.  waterproofError: salmon mousse did not deep-fry hand-drill.\r\n\r\n\r\nPlease feel free to leave bug reports and feature requests on the github homepage at https://github.com/Morrolan/surrealism.\r\n\r\nAll comments are welcome!\r\n\r\n\r\nChangelog\r\n---------\r\n0.9.0\r\n-----\r\nAdded the ability to override getfault() and getsentence() allowing you to now specify a fault_id or sentence_id from within the database. \r\n\r\n0.8.0\r\n-----\r\nAdded comments to code and fixed some dodgy sentences in the database.\r\n\r\n\r\n0.7.0\r\n-----\r\nAdded a new table which allows more faults rather than just the C++ syntax fault.  Also added faulttest() and sentencetest() so you can print out all sentences and faults.\r\n\r\n\r\n0.6.0\r\n-----\r\nAdded the ability to have the entire sentence in uppercase (some sentences require it) and tripled the size of the 'names' table.\r\n\r\n\r\n0.5.6\r\n-----\r\nMore database tweaks to fix spacing issues.\r\n\r\n\r\n0.5.5\r\n-----\r\nFixed print statement which prevented installation and use on Python 3x.\r\n\r\n\r\n0.5.4\r\n-----\r\nAdded pkg_resources to manage sqlite file installation (particularly a problem when using virtualenv).\r\n\r\n\r\n0.5.3\r\n-----\r\nAdded seperate script (sentence_test) \r\n\r\n\r\n0.5.2\r\n-----\r\nFixed bug with adjectives.\r\n\r\n\r\n0.5.1\r\n-----\r\nAdded basic docstrings.\r\n\r\n0.5.0\r\n-----\r\n\r\nRemoved unnecessary Class, now making it even easier and simpler to use.\r\n\r\n\r\n0.4.1\r\n-----\r\n\r\nMinor bug fix to the getfault sentences where 2 periods were printing instead of 1.\r\n\r\n\r\n0.4\r\n---\r\n\r\nUrgent bug fix to getfault where returned result was incomplete.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}